def assert_equal(expected, actual)
  puts actual.inspect + " should be " + expected.inspect
end

a = [1, 2]
a << 3
assert_equal([1, 2, 3], a)

b = ["a", 1, [2]]
c = b + [3, 4]
assert_equal(["a", 1, [2], 3, 4], c)

d = ["a", "b", "c", "d", "e", "f"]
assert_equal("b", d[1])
assert_equal(["c", "d"], d[2,2])
assert_equal(nil, d[100])

d[1] = "B"
assert_equal("B", d[1])
d[7] = "H"
assert_equal(["a", "B", "c", "d", "e", "f", nil, "H"], d)

assert_equal(6, d.size)
assert_equal(6, d.length)

[1, "a", :b].each do |i|
  p i
end

e = [1, 2, 3]
assert_equal(1, e.first)
assert_equal(3, e.last)
assert_equal(nil, [].first)
assert_equal(nil, [].last)
