require_relative '../spec_helper'

NUM = 1

class Foo
  NUM = 2

  def self.num
    NUM
  end

  def num
    NUM
  end
end

class Bar < Foo
  NUM = 3

  def self.num
    NUM
  end

  def num
    NUM
  end
end

class Baz < Bar
  def self.num
    NUM
  end

  def num
    NUM
  end
end

module Mod
  class C1
    class C1a
    end
  end

  class C2
    Copy = C1
    def c1
      C1
    end
  end
end

describe 'namespace' do
  it 'resolves top-level constants' do
    NUM.should == 1
  end

  it 'resolves constants on a class' do
    Foo::NUM.should == 2
    Foo::num.should == 2
    Foo.num.should == 2
    Foo.new.num.should == 2
    Bar::NUM.should == 3
    Bar::num.should == 3
    Bar.num.should == 3
    Bar.new.num.should == 3
    Baz::NUM.should == 3
    Baz::num.should == 3
    Baz.num.should == 3
    Baz.new.num.should == 3
  end

  it 'walks up the namespaces to find constants' do
    Mod::C2.new.c1.should == Mod::C1
  end

  it 'includes the namespace when inspecting' do
    Mod::C1.inspect.should == 'Mod::C1'
    Mod::C1::C1a.inspect.should == 'Mod::C1::C1a'
    Mod::C2.inspect.should == 'Mod::C2'
    Mod::C2::Copy.inspect.should == 'Mod::C1'
  end
end
