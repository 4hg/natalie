# skip-test

class SpecFailedException < StandardError; end

@specs = []

def describe(description)
  @describe = description
  yield
end

def it(test, &block)
  @specs << [@describe, test, block]
end

class Object
  def must_equal(other)
    if self == other
      nil
    else
      raise SpecFailedException, self.inspect + ' is not equal to ' + other.inspect
    end
  end
end

def run_specs
  @failures = []

  @specs.each do |test|
    fn = test.last
    begin
      fn.call
    rescue => e
      print 'F'
      @failures << [test[0], test[1], e.message]
    else
      print '.'
    end
  end

  if @failures.any?
    puts
    puts
    puts 'Failed specs:'
    @failures.each do |failure|
      puts failure[0]
      puts '  ' + failure[1]
      puts '    ' + failure[2]
    end
    exit 1
  else
    puts
    puts @specs.size.to_s + ' spec(s) passed.'
  end
end
