#!/usr/bin/env ruby

require 'optparse'
require 'tempfile'
require_relative '../lib/natalie'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: natalie [options] file.nat"

  opts.on("-d", "--debug", "Show debug output") do |d|
    ENV['DEBUG'] = 'true'
  end

  opts.on("-e one-line-script", "Execute one-line script") do |e|
    options[:execute] = e
  end

  opts.on("--ast", "Show AST rather than compiling") do |ast|
    options[:ast] = ast
  end

  opts.on("-c path", "--compile path", "Compile to binary but do not execute") do |c|
    options[:compile] = c
  end

end.parse!

if options[:execute]
  source_path = '.'
  code = options[:execute].gsub(/\\n/, "\n")
elsif ARGV.any?
  source_path = ARGV.shift
  code = File.read(source_path)
else
  source_path = '.'
  repl = Natalie::Repl.new
  repl.go
  exit
end

parser = Natalie::Parser.new(code)
ast = parser.ast

if options[:ast]
  require 'pp'
  pp ast
elsif options[:compile]
  compiler = Natalie::Compiler.new(ast, source_path)
  compiler.compile(options[:compile])
else
  compiler = Natalie::Compiler.new(ast, source_path)
  out = Tempfile.create('natalie')
  out.close
  compiler.compile(out.path)
  puts out.path if ENV['DEBUG']
  puts `#{out.path} 2>&1` # FIXME: stderr
  success = $?.to_i == 0
  File.unlink(out.path) unless ENV['DEBUG']
  exit(success ? 0 : 1)
end
